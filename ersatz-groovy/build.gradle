plugins {
    id 'java-library'
    id 'groovy'
    id "com.github.hierynomus.license" version '0.15.0'
    id "com.github.johnrengelman.shadow" version '6.0.0'
}

group = rootProject.group
version = rootProject.version

sourceCompatibility = 15
targetCompatibility = 15

repositories {
    jcenter()
}

dependencies {
    implementation project(':ersatz')
    implementation "org.codehaus.groovy:groovy:3.0.5"
    implementation "org.codehaus.groovy:groovy-json:3.0.5"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.5.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.5.2"
}

test {
    useJUnitPlatform()
    maxParallelForks = Math.min(Runtime.runtime.availableProcessors(), 8)
}


license {
    header = file('../config/license_header.txt')

    ignoreFailures false

    ext.year = Calendar.instance.get(Calendar.YEAR)

    excludes(['**/*.txt', '**/*.dtd', '**/*.xml', '**/*.ent', '**/*.jks', '**/*.jpg'])
}

shadowJar {
    classifier = 'safe'
    dependencies {
        exclude(dependency('javax.activation:activation:.*'))
        exclude(dependency('org.slf4j:slf4j-api:.*'))
        exclude(dependency('org.hamcrest::.*'))
        exclude(dependency('org.wildfly.client::.*'))
        exclude(dependency('org.codehaus.groovy::.*'))
    }

    mergeServiceFiles()

    relocate 'io.undertow', 'ersatz.undertow'
    relocate 'org.jboss', 'ersatz.jboss'
    relocate 'org.xnio', 'ersatz.xnio'
    relocate 'javax.servlet', 'ersatz.servlet'
    relocate 'org.apache.commons.fileupload', 'ersatz.fileupload'
    relocate 'org.apache.commons.io', 'ersatz.io'
    relocate 'org.awaitility', 'ersatz.awaitility'
    relocate 'org.awaitility', 'ersatz.awaitility'
    relocate 'space.jasan.support.groovy', 'ersatz.groovy'
    relocate 'org.wildfly.common', 'ersazt.wildfly.common'
}
